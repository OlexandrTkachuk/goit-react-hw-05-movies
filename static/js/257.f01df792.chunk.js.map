{"version":3,"file":"static/js/257.f01df792.chunk.js","mappings":"mRAGaA,EAAmBC,EAAAA,EAAAA,IAAH,yIAQhBC,EAAmBD,EAAAA,EAAAA,IAAH,8JAShBE,EAAcF,EAAAA,EAAAA,GAAH,gHAOXG,GAAaH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,4HASVK,EAAcL,EAAAA,EAAAA,GAAH,0CAIXM,GAAoBN,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,sR,SC8D9B,EAxFqB,WAAO,IAAD,EACzB,GAAkCO,EAAAA,EAAAA,UAAS,CAAC,GAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,SAAO,UAAAH,EAASI,aAAT,eAAgBC,OAAQ,MAElDC,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAoBT,GAASU,MAAK,SAAAC,GAChCZ,EAAaY,EACd,GAGF,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACZ,IAEJ,IAAQe,EACNjB,EADMiB,YAAaC,EACnBlB,EADmBkB,MAAOC,EAC1BnB,EAD0BmB,aAAcC,EACxCpB,EADwCoB,aAAcC,EACtDrB,EADsDqB,SAAUC,EAChEtB,EADgEsB,OAGlE,OACE,kCACIC,EAAAA,EAAAA,SAAQvB,KACR,iCACE,UAACT,EAAD,YACE,gBACEiC,IACGP,EAAD,0CAEuCA,GADnCQ,EAGNC,IAAKR,EACLS,MAAM,SAGR,UAAClC,EAAD,YACE,0BACGyB,EACAC,IACC,iBACES,MAAO,CACLC,QAAS,WACTC,MAAO,WAHX,SAMGX,EAAaY,MAAM,EAAG,SAK7B,wCAAgBC,KAAKC,MAAqB,GAAfb,GAAqB,QAEhD,0BACE,sCADF,IACqBC,MAGrB,0BACE,oCAAgB,IACfC,EAAOY,OAAS,EACbZ,EAAOa,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MACrC,iDAKV,4BACE,eAAIV,MAAO,CAAEW,UAAW,UAAxB,qCACA,UAAC7C,EAAD,YACE,SAACG,EAAD,WACE,SAACF,EAAD,CAAY6C,GAAG,OAAf,qBAGF,SAAC3C,EAAD,WACE,SAACF,EAAD,CAAY6C,GAAG,UAAf,0BAIJ,SAAC,EAAAC,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,aAMR,SAAC5C,EAAD,CAAmB0C,GAAIlC,EAAWqC,QAAlC,uBAGL,C","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const MovieInfoWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 10px;\n  margin: 40px auto 20px;\n  max-width: 1200px;\n`;\n\nexport const MovieTextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  // justify-content: space-between;\n  gap: 20px;\n  padding: 0 50px;\n  width: 500px;\n`;\n\nexport const SubMenuList = styled.ul`\n  display: flex;\n  margin: 0 auto;\n  text-align: center;\n  justify-content: center;\n`;\n\nexport const SubNavLink = styled(NavLink)`\n  font-size: 20px;\n  font-weight: 600;\n  color: #001a00;\n  &.active {\n    color: #a01d1d;\n  }\n`;\n\nexport const SubMenuItem = styled.li`\n  padding: 10px;\n`;\n\nexport const DetailsStyledLink = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  margin: 30px auto 40px;\n  font-size: 20px;\n  background-color: grey;\n  color: white;\n  width: 160px;\n  padding: 10px 20px;\n  border-radius: 12px;\n  opacity: 0.8;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n","import { useState, useEffect, useRef, Suspense } from 'react';\nimport { getMovieDetailsById } from 'services/themoviedb-api';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { isEmpty } from 'lodash';\nimport defaultImage from './defaultImage.jpeg';\nimport {\n  DetailsStyledLink,\n  MovieInfoWrapper,\n  MovieTextWrapper,\n  SubMenuItem,\n  SubMenuList,\n  SubNavLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const goBackHref = useRef(location.state?.from || '/');\n\n  useEffect(() => {\n    try {\n      getMovieDetailsById(movieId).then(response => {\n        setMovieInfo(response);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movieInfo;\n\n  return (\n    <>\n      {!isEmpty(movieInfo) && (\n        <>\n          <MovieInfoWrapper>\n            <img\n              src={\n                !poster_path\n                  ? defaultImage\n                  : `https://image.tmdb.org/t/p/w500/${poster_path}`\n              }\n              alt={title}\n              width=\"300\"\n            />\n\n            <MovieTextWrapper>\n              <h1>\n                {title}\n                {release_date && (\n                  <span\n                    style={{\n                      padding: '0px 10px',\n                      color: '#a01d1d',\n                    }}\n                  >\n                    {release_date.slice(0, 4)}\n                  </span>\n                )}\n              </h1>\n\n              <p>User score: {Math.round(vote_average * 10) + '%'}</p>\n\n              <p>\n                <b>Overview: </b> {overview}\n              </p>\n\n              <p>\n                <b>Genres: </b>{' '}\n                {genres.length > 0\n                  ? genres.map(genre => genre.name).join(', ')\n                  : 'There is no information about genres'}\n              </p>\n            </MovieTextWrapper>\n          </MovieInfoWrapper>\n\n          <div>\n            <h2 style={{ textAlign: 'center' }}>Additional information</h2>\n            <SubMenuList>\n              <SubMenuItem>\n                <SubNavLink to=\"cast\">Cast</SubNavLink>\n              </SubMenuItem>\n\n              <SubMenuItem>\n                <SubNavLink to=\"reviews\">Review</SubNavLink>\n              </SubMenuItem>\n            </SubMenuList>\n\n            <Suspense fallback={<div>Loading...</div>}>\n              <Outlet />\n            </Suspense>\n          </div>\n        </>\n      )}\n\n      <DetailsStyledLink to={goBackHref.current}>Go back</DetailsStyledLink>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["MovieInfoWrapper","styled","MovieTextWrapper","SubMenuList","SubNavLink","NavLink","SubMenuItem","DetailsStyledLink","useState","movieInfo","setMovieInfo","movieId","useParams","location","useLocation","goBackHref","useRef","state","from","useEffect","getMovieDetailsById","then","response","error","console","log","poster_path","title","release_date","vote_average","overview","genres","isEmpty","src","defaultImage","alt","width","style","padding","color","slice","Math","round","length","map","genre","name","join","textAlign","to","Suspense","fallback","current"],"sourceRoot":""}